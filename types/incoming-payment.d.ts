/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The assetCode is a code that indicates the underlying asset. An ISO4217 currency code should be used whenever possible. The ISO4217 representation of the US Dollar is USD.
 */
export type AssetCode = string;
/**
 * The number of decimal places that defines the scale of the smallest divisible unit for the given asset code. It determines how an integer amount is scaled to derive the actual monetary value. For example, USD has an asset scale of 2 with the smallest unit being 0.01. An integer amount of `1000` with an `assetCode` of `USD` and `assetScale` of `2` translates to $10.00.
 */
export type AssetScale = number;
/**
 * The assetCode is a code that indicates the underlying asset. An ISO4217 currency code should be used whenever possible. The ISO4217 representation of the US Dollar is USD.
 */
export type AssetCode1 = string;
/**
 * The number of decimal places that defines the scale of the smallest divisible unit for the given asset code. It determines how an integer amount is scaled to derive the actual monetary value. For example, USD has an asset scale of 2 with the smallest unit being 0.01. An integer amount of `1000` with an `assetCode` of `USD` and `assetScale` of `2` translates to $10.00.
 */
export type AssetScale1 = number;

/**
 * An **incoming payment** resource represents a payment that will be, is currently being, or has been received by the account.
 */
export interface IncomingPayment {
  /**
   * The URL of the wallet address this payment is being made into.
   */
  walletAddress: string;
  /**
   * The access token required to access the resource. This token is provided when a grant is created.
   */
  accessToken?: string;
  /**
   * The URL identifying the incoming payment.
   */
  id?: string;
  /**
   * Describes whether the incoming payment has completed receiving fund.
   */
  completed?: boolean;
  incomingAmount: IncomingAmount;
  receivedAmount?: ReceivedAmount;
  /**
   * The date and time when payments under this incoming payment will no longer be accepted.
   */
  expiresAt?: string;
  /**
   * Additional metadata associated with the incoming payment. (Optional)
   */
  metadata?: {
    [k: string]: unknown;
  };
  /**
   * The date and time when the incoming payment was created.
   */
  createdAt?: string;
  [k: string]: unknown;
}
/**
 * The maximum amount that should be paid into the wallet address under this incoming payment.
 */
export interface IncomingAmount {
  /**
   * The value is an unsigned 64-bit integer amount, represented as a string.
   */
  value: string;
  assetCode: AssetCode;
  assetScale: AssetScale;
  [k: string]: unknown;
}
/**
 * The total amount that has been paid into the wallet address under this incoming payment.
 */
export interface ReceivedAmount {
  /**
   * The value is an unsigned 64-bit integer amount, represented as a string.
   */
  value: string;
  assetCode: AssetCode1;
  assetScale: AssetScale1;
  [k: string]: unknown;
}
