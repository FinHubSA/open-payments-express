/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Defines the limits for outgoing payments.
 */
export type LimitsOutgoing =
  | {
      receiver?: Receiver;
      interval?: Interval;
      [k: string]: unknown;
    }
  | {
      receiver?: Receiver1;
      interval?: Interval1;
      debitAmount: Amount;
      [k: string]: unknown;
    }
  | {
      receiver?: Receiver2;
      interval?: Interval2;
      receiveAmount: Amount1;
      [k: string]: unknown;
    };
/**
 * The URL of the incoming payment that is being paid.
 */
export type Receiver = string;
/**
 * [ISO8601 repeating interval](https://en.wikipedia.org/wiki/ISO_8601#Repeating_intervals)
 */
export type Interval = string;
/**
 * The URL of the incoming payment that is being paid.
 */
export type Receiver1 = string;
/**
 * [ISO8601 repeating interval](https://en.wikipedia.org/wiki/ISO_8601#Repeating_intervals)
 */
export type Interval1 = string;
/**
 * The assetCode is a code that indicates the underlying asset. An ISO4217 currency code should be used whenever possible. The ISO4217 representation of the US Dollar is USD.
 */
export type AssetCode = string;
/**
 * The number of decimal places that defines the scale of the smallest divisible unit for the given asset code. It determines how an integer amount is scaled to derive the actual monetary value. For example, USD has an asset scale of 2 with the smallest unit being 0.01. An integer amount of `1000` with an `assetCode` of `USD` and `assetScale` of `2` translates to $10.00.
 */
export type AssetScale = number;
/**
 * The URL of the incoming payment that is being paid.
 */
export type Receiver2 = string;
/**
 * [ISO8601 repeating interval](https://en.wikipedia.org/wiki/ISO_8601#Repeating_intervals)
 */
export type Interval2 = string;
/**
 * The assetCode is a code that indicates the underlying asset. An ISO4217 currency code should be used whenever possible. The ISO4217 representation of the US Dollar is USD.
 */
export type AssetCode1 = string;
/**
 * The number of decimal places that defines the scale of the smallest divisible unit for the given asset code. It determines how an integer amount is scaled to derive the actual monetary value. For example, USD has an asset scale of 2 with the smallest unit being 0.01. An integer amount of `1000` with an `assetCode` of `USD` and `assetScale` of `2` translates to $10.00.
 */
export type AssetScale1 = number;

export interface AccessOutgoing {
  /**
   * The type of resource request as a string.
   */
  type: "outgoing-payment";
  /**
   * The types of actions the client instance will take at the RS.
   */
  actions: ("create" | "read" | "read-all" | "list" | "list-all")[];
  /**
   * A string identifier indicating a specific resource at the RS.
   */
  identifier: string;
  limits?: LimitsOutgoing;
  interact?: Interact;
  [k: string]: unknown;
}
/**
 * Maximum debit per interval.
 */
export interface Amount {
  /**
   * The value is an unsigned 64-bit integer amount, represented as a string.
   */
  value: string;
  assetCode: AssetCode;
  assetScale: AssetScale;
  [k: string]: unknown;
}
/**
 * Maximum receive per interval.
 */
export interface Amount1 {
  /**
   * The value is an unsigned 64-bit integer amount, represented as a string.
   */
  value: string;
  assetCode: AssetCode1;
  assetScale: AssetScale1;
  [k: string]: unknown;
}
/**
 * Parameters for interaction methods the client can support.
 */
export interface Interact {
  /**
   * How the client can start an interaction.
   */
  start: "redirect"[];
  /**
   * How the client receives interaction completion.
   */
  finish?: {
    /**
     * The callback method.
     */
    method: "redirect";
    /**
     * Callback URI.
     */
    uri: string;
    /**
     * Random value for securing the callback.
     */
    nonce: string;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
